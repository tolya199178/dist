{"version":3,"sources":["webpack:///H:/Ironkey/EMS/ironkey/~/fuelux/js/wizard.js?e19f","webpack:///H:/Ironkey/EMS/ironkey/~/fuelux/js/wizard.js"],"names":[],"mappings":"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","file":"14.chunk.js","sourcesContent":["require(\"!!H:\\\\Ironkey\\\\EMS\\\\ironkey\\\\node_modules\\\\script-loader\\\\addScript.js\")(require(\"!!H:\\\\Ironkey\\\\EMS\\\\ironkey\\\\node_modules\\\\raw-loader\\\\index.js!H:\\\\Ironkey\\\\EMS\\\\ironkey\\\\node_modules\\\\fuelux\\\\js\\\\wizard.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// H:/Ironkey/EMS/ironkey/~/script-loader!H:/Ironkey/EMS/ironkey/~/fuelux/js/wizard.js\n// module id = 1579\n// module chunks = 14","module.exports = \"/*\\n * Fuel UX Wizard\\n * https://github.com/ExactTarget/fuelux\\n *\\n * Copyright (c) 2014 ExactTarget\\n * Licensed under the BSD New license.\\n */\\n\\n// -- BEGIN UMD WRAPPER PREFACE --\\n\\n// For more information on UMD visit:\\n// https://github.com/umdjs/umd/blob/master/jqueryPlugin.js\\n\\n(function (factory) {\\n\\tif (typeof define === 'function' && define.amd) {\\n\\t\\t// if AMD loader is available, register as an anonymous module.\\n\\t\\tdefine(['jquery'], factory);\\n\\t} else if (typeof exports === 'object') {\\n\\t\\t// Node/CommonJS\\n\\t\\tmodule.exports = factory(require('jquery'));\\n\\t} else {\\n\\t\\t// OR use browser globals if AMD is not present\\n\\t\\tfactory(jQuery);\\n\\t}\\n}(function ($) {\\n\\t// -- END UMD WRAPPER PREFACE --\\n\\n\\t// -- BEGIN MODULE CODE HERE --\\n\\n\\tvar old = $.fn.wizard;\\n\\n\\t// WIZARD CONSTRUCTOR AND PROTOTYPE\\n\\n\\tvar Wizard = function (element, options) {\\n\\t\\tthis.$element = $(element);\\n\\t\\tthis.options = $.extend({}, $.fn.wizard.defaults, options);\\n\\t\\tthis.options.disablePreviousStep = (this.$element.attr('data-restrict') === 'previous') ? true : this.options.disablePreviousStep;\\n\\t\\tthis.currentStep = this.options.selectedItem.step;\\n\\t\\tthis.numSteps = this.$element.find('.steps li').length;\\n\\t\\tthis.$prevBtn = this.$element.find('button.btn-prev');\\n\\t\\tthis.$nextBtn = this.$element.find('button.btn-next');\\n\\n\\t\\tvar kids = this.$nextBtn.children().detach();\\n\\t\\tthis.nextText = $.trim(this.$nextBtn.text());\\n\\t\\tthis.$nextBtn.append(kids);\\n\\n\\t\\tvar steps = this.$element.children('.steps-container');\\n\\t\\t// maintains backwards compatibility with < 3.8, will be removed in the future\\n\\t\\tif (steps.length === 0) {\\n\\t\\t\\tsteps = this.$element;\\n\\t\\t\\tthis.$element.addClass('no-steps-container');\\n\\t\\t\\tif (window && window.console && window.console.warn) {\\n\\t\\t\\t\\twindow.console.warn('please update your wizard markup to include \\\".steps-container\\\" as seen in http://getfuelux.com/javascript.html#wizard-usage-markup');\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tsteps = steps.find('.steps');\\n\\n\\t\\t// handle events\\n\\t\\tthis.$prevBtn.on('click.fu.wizard', $.proxy(this.previous, this));\\n\\t\\tthis.$nextBtn.on('click.fu.wizard', $.proxy(this.next, this));\\n\\t\\tsteps.on('click.fu.wizard', 'li.complete', $.proxy(this.stepclicked, this));\\n\\n\\t\\tthis.selectedItem(this.options.selectedItem);\\n\\n\\t\\tif (this.options.disablePreviousStep) {\\n\\t\\t\\tthis.$prevBtn.attr('disabled', true);\\n\\t\\t\\tthis.$element.find('.steps').addClass('previous-disabled');\\n\\t\\t}\\n\\t};\\n\\n\\tWizard.prototype = {\\n\\n\\t\\tconstructor: Wizard,\\n\\n\\t\\tdestroy: function () {\\n\\t\\t\\tthis.$element.remove();\\n\\t\\t\\t// any external bindings [none]\\n\\t\\t\\t// empty elements to return to original markup [none]\\n\\t\\t\\t// returns string of markup\\n\\t\\t\\treturn this.$element[0].outerHTML;\\n\\t\\t},\\n\\n\\t\\t//index is 1 based\\n\\t\\t//second parameter can be array of objects [{ ... }, { ... }] or you can pass n additional objects as args\\n\\t\\t//object structure is as follows (all params are optional): { badge: '', label: '', pane: '' }\\n\\t\\taddSteps: function (index) {\\n\\t\\t\\tvar items = [].slice.call(arguments).slice(1);\\n\\t\\t\\tvar $steps = this.$element.find('.steps');\\n\\t\\t\\tvar $stepContent = this.$element.find('.step-content');\\n\\t\\t\\tvar i, l, $pane, $startPane, $startStep, $step;\\n\\n\\t\\t\\tindex = (index === -1 || (index > (this.numSteps + 1))) ? this.numSteps + 1 : index;\\n\\t\\t\\tif (items[0] instanceof Array) {\\n\\t\\t\\t\\titems = items[0];\\n\\t\\t\\t}\\n\\n\\t\\t\\t$startStep = $steps.find('li:nth-child(' + index + ')');\\n\\t\\t\\t$startPane = $stepContent.find('.step-pane:nth-child(' + index + ')');\\n\\t\\t\\tif ($startStep.length < 1) {\\n\\t\\t\\t\\t$startStep = null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (i = 0, l = items.length; i < l; i++) {\\n\\t\\t\\t\\t$step = $('<li data-step=\\\"' + index + '\\\"><span class=\\\"badge badge-info\\\"></span></li>');\\n\\t\\t\\t\\t$step.append(items[i].label || '').append('<span class=\\\"chevron\\\"></span>');\\n\\t\\t\\t\\t$step.find('.badge').append(items[i].badge || index);\\n\\n\\t\\t\\t\\t$pane = $('<div class=\\\"step-pane\\\" data-step=\\\"' + index + '\\\"></div>');\\n\\t\\t\\t\\t$pane.append(items[i].pane || '');\\n\\n\\t\\t\\t\\tif (!$startStep) {\\n\\t\\t\\t\\t\\t$steps.append($step);\\n\\t\\t\\t\\t\\t$stepContent.append($pane);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t$startStep.before($step);\\n\\t\\t\\t\\t\\t$startPane.before($pane);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tindex++;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.syncSteps();\\n\\t\\t\\tthis.numSteps = $steps.find('li').length;\\n\\t\\t\\tthis.setState();\\n\\t\\t},\\n\\n\\t\\t//index is 1 based, howMany is number to remove\\n\\t\\tremoveSteps: function (index, howMany) {\\n\\t\\t\\tvar action = 'nextAll';\\n\\t\\t\\tvar i = 0;\\n\\t\\t\\tvar $steps = this.$element.find('.steps');\\n\\t\\t\\tvar $stepContent = this.$element.find('.step-content');\\n\\t\\t\\tvar $start;\\n\\n\\t\\t\\thowMany = (howMany !== undefined) ? howMany : 1;\\n\\n\\t\\t\\tif (index > $steps.find('li').length) {\\n\\t\\t\\t\\t$start = $steps.find('li:last');\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t$start = $steps.find('li:nth-child(' + index + ')').prev();\\n\\t\\t\\t\\tif ($start.length < 1) {\\n\\t\\t\\t\\t\\taction = 'children';\\n\\t\\t\\t\\t\\t$start = $steps;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t$start[action]().each(function () {\\n\\t\\t\\t\\tvar item = $(this);\\n\\t\\t\\t\\tvar step = item.attr('data-step');\\n\\t\\t\\t\\tif (i < howMany) {\\n\\t\\t\\t\\t\\titem.remove();\\n\\t\\t\\t\\t\\t$stepContent.find('.step-pane[data-step=\\\"' + step + '\\\"]:first').remove();\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ti++;\\n\\t\\t\\t});\\n\\n\\t\\t\\tthis.syncSteps();\\n\\t\\t\\tthis.numSteps = $steps.find('li').length;\\n\\t\\t\\tthis.setState();\\n\\t\\t},\\n\\n\\t\\tsetState: function () {\\n\\t\\t\\tvar canMovePrev = (this.currentStep > 1);//remember, steps index is 1 based...\\n\\t\\t\\tvar isFirstStep = (this.currentStep === 1);\\n\\t\\t\\tvar isLastStep = (this.currentStep === this.numSteps);\\n\\n\\t\\t\\t// disable buttons based on current step\\n\\t\\t\\tif (!this.options.disablePreviousStep) {\\n\\t\\t\\t\\tthis.$prevBtn.attr('disabled', (isFirstStep === true || canMovePrev === false));\\n\\t\\t\\t}\\n\\n\\t\\t\\t// change button text of last step, if specified\\n\\t\\t\\tvar last = this.$nextBtn.attr('data-last');\\n\\t\\t\\tif (last) {\\n\\t\\t\\t\\tthis.lastText = last;\\n\\t\\t\\t\\t// replace text\\n\\t\\t\\t\\tvar text = this.nextText;\\n\\t\\t\\t\\tif (isLastStep === true) {\\n\\t\\t\\t\\t\\ttext = this.lastText;\\n\\t\\t\\t\\t\\t// add status class to wizard\\n\\t\\t\\t\\t\\tthis.$element.addClass('complete');\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tthis.$element.removeClass('complete');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar kids = this.$nextBtn.children().detach();\\n\\t\\t\\t\\tthis.$nextBtn.text(text).append(kids);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// reset classes for all steps\\n\\t\\t\\tvar $steps = this.$element.find('.steps li');\\n\\t\\t\\t$steps.removeClass('active').removeClass('complete');\\n\\t\\t\\t$steps.find('span.badge').removeClass('badge-info').removeClass('badge-success');\\n\\n\\t\\t\\t// set class for all previous steps\\n\\t\\t\\tvar prevSelector = '.steps li:lt(' + (this.currentStep - 1) + ')';\\n\\t\\t\\tvar $prevSteps = this.$element.find(prevSelector);\\n\\t\\t\\t$prevSteps.addClass('complete');\\n\\t\\t\\t$prevSteps.find('span.badge').addClass('badge-success');\\n\\n\\t\\t\\t// set class for current step\\n\\t\\t\\tvar currentSelector = '.steps li:eq(' + (this.currentStep - 1) + ')';\\n\\t\\t\\tvar $currentStep = this.$element.find(currentSelector);\\n\\t\\t\\t$currentStep.addClass('active');\\n\\t\\t\\t$currentStep.find('span.badge').addClass('badge-info');\\n\\n\\t\\t\\t// set display of target element\\n\\t\\t\\tvar $stepContent = this.$element.find('.step-content');\\n\\t\\t\\tvar target = $currentStep.attr('data-step');\\n\\t\\t\\t$stepContent.find('.step-pane').removeClass('active');\\n\\t\\t\\t$stepContent.find('.step-pane[data-step=\\\"' + target + '\\\"]:first').addClass('active');\\n\\n\\t\\t\\t// reset the wizard position to the left\\n\\t\\t\\tthis.$element.find('.steps').first().attr('style', 'margin-left: 0');\\n\\n\\t\\t\\t// check if the steps are wider than the container div\\n\\t\\t\\tvar totalWidth = 0;\\n\\t\\t\\tthis.$element.find('.steps > li').each(function () {\\n\\t\\t\\t\\ttotalWidth += $(this).outerWidth();\\n\\t\\t\\t});\\n\\t\\t\\tvar containerWidth = 0;\\n\\t\\t\\tif (this.$element.find('.actions').length) {\\n\\t\\t\\t\\tcontainerWidth = this.$element.width() - this.$element.find('.actions').first().outerWidth();\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tcontainerWidth = this.$element.width();\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (totalWidth > containerWidth) {\\n\\t\\t\\t\\t// set the position so that the last step is on the right\\n\\t\\t\\t\\tvar newMargin = totalWidth - containerWidth;\\n\\t\\t\\t\\tthis.$element.find('.steps').first().attr('style', 'margin-left: -' + newMargin + 'px');\\n\\n\\t\\t\\t\\t// set the position so that the active step is in a good\\n\\t\\t\\t\\t// position if it has been moved out of view\\n\\t\\t\\t\\tif (this.$element.find('li.active').first().position().left < 200) {\\n\\t\\t\\t\\t\\tnewMargin += this.$element.find('li.active').first().position().left - 200;\\n\\t\\t\\t\\t\\tif (newMargin < 1) {\\n\\t\\t\\t\\t\\t\\tthis.$element.find('.steps').first().attr('style', 'margin-left: 0');\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tthis.$element.find('.steps').first().attr('style', 'margin-left: -' + newMargin + 'px');\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// only fire changed event after initializing\\n\\t\\t\\tif (typeof (this.initialized) !== 'undefined') {\\n\\t\\t\\t\\tvar e = $.Event('changed.fu.wizard');\\n\\t\\t\\t\\tthis.$element.trigger(e, {\\n\\t\\t\\t\\t\\tstep: this.currentStep\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.initialized = true;\\n\\t\\t},\\n\\n\\t\\tstepclicked: function (e) {\\n\\t\\t\\tvar li = $(e.currentTarget);\\n\\t\\t\\tvar index = this.$element.find('.steps li').index(li);\\n\\n\\t\\t\\tif (index < this.currentStep && this.options.disablePreviousStep) {//enforce restrictions\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tvar evt = $.Event('stepclicked.fu.wizard');\\n\\t\\t\\t\\tthis.$element.trigger(evt, {\\n\\t\\t\\t\\t\\tstep: index + 1\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tif (evt.isDefaultPrevented()) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.currentStep = (index + 1);\\n\\t\\t\\t\\tthis.setState();\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tsyncSteps: function () {\\n\\t\\t\\tvar i = 1;\\n\\t\\t\\tvar $steps = this.$element.find('.steps');\\n\\t\\t\\tvar $stepContent = this.$element.find('.step-content');\\n\\n\\t\\t\\t$steps.children().each(function () {\\n\\t\\t\\t\\tvar item = $(this);\\n\\t\\t\\t\\tvar badge = item.find('.badge');\\n\\t\\t\\t\\tvar step = item.attr('data-step');\\n\\n\\t\\t\\t\\tif (!isNaN(parseInt(badge.html(), 10))) {\\n\\t\\t\\t\\t\\tbadge.html(i);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\titem.attr('data-step', i);\\n\\t\\t\\t\\t$stepContent.find('.step-pane[data-step=\\\"' + step + '\\\"]:last').attr('data-step', i);\\n\\t\\t\\t\\ti++;\\n\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\tprevious: function () {\\n\\t\\t\\tif (this.options.disablePreviousStep || this.currentStep === 1) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar e = $.Event('actionclicked.fu.wizard');\\n\\t\\t\\tthis.$element.trigger(e, {\\n\\t\\t\\t\\tstep: this.currentStep,\\n\\t\\t\\t\\tdirection: 'previous'\\n\\t\\t\\t});\\n\\t\\t\\tif (e.isDefaultPrevented()) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}// don't increment ...what? Why?\\n\\n\\t\\t\\tthis.currentStep -= 1;\\n\\t\\t\\tthis.setState();\\n\\n\\t\\t\\t// only set focus if focus is still on the $nextBtn (avoid stomping on a focus set programmatically in actionclicked callback)\\n\\t\\t\\tif (this.$prevBtn.is(':focus')) {\\n\\t\\t\\t\\tvar firstFormField = this.$element.find('.active').find('input, select, textarea')[0];\\n\\n\\t\\t\\t\\tif (typeof firstFormField !== 'undefined') {\\n\\t\\t\\t\\t\\t// allow user to start typing immediately instead of having to click on the form field.\\n\\t\\t\\t\\t\\t$(firstFormField).focus();\\n\\t\\t\\t\\t} else if (this.$element.find('.active input:first').length === 0 && this.$prevBtn.is(':disabled')) {\\n\\t\\t\\t\\t\\t//only set focus on a button as the last resort if no form fields exist and the just clicked button is now disabled\\n\\t\\t\\t\\t\\tthis.$nextBtn.focus();\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tnext: function () {\\n\\t\\t\\tvar e = $.Event('actionclicked.fu.wizard');\\n\\t\\t\\tthis.$element.trigger(e, {\\n\\t\\t\\t\\tstep: this.currentStep,\\n\\t\\t\\t\\tdirection: 'next'\\n\\t\\t\\t});\\n\\t\\t\\tif (e.isDefaultPrevented()) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}// respect preventDefault in case dev has attached validation to step and wants to stop propagation based on it.\\n\\n\\t\\t\\tif (this.currentStep < this.numSteps) {\\n\\t\\t\\t\\tthis.currentStep += 1;\\n\\t\\t\\t\\tthis.setState();\\n\\t\\t\\t} else {//is last step\\n\\t\\t\\t\\tthis.$element.trigger('finished.fu.wizard');\\n\\t\\t\\t}\\n\\n\\t\\t\\t// only set focus if focus is still on the $nextBtn (avoid stomping on a focus set programmatically in actionclicked callback)\\n\\t\\t\\tif (this.$nextBtn.is(':focus')) {\\n\\t\\t\\t\\tvar firstFormField = this.$element.find('.active').find('input, select, textarea')[0];\\n\\n\\t\\t\\t\\tif (typeof firstFormField !== 'undefined') {\\n\\t\\t\\t\\t\\t// allow user to start typing immediately instead of having to click on the form field.\\n\\t\\t\\t\\t\\t$(firstFormField).focus();\\n\\t\\t\\t\\t} else if (this.$element.find('.active input:first').length === 0 && this.$nextBtn.is(':disabled')) {\\n\\t\\t\\t\\t\\t//only set focus on a button as the last resort if no form fields exist and the just clicked button is now disabled\\n\\t\\t\\t\\t\\tthis.$prevBtn.focus();\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tselectedItem: function (selectedItem) {\\n\\t\\t\\tvar retVal, step;\\n\\n\\t\\t\\tif (selectedItem) {\\n\\t\\t\\t\\tstep = selectedItem.step || -1;\\n\\t\\t\\t\\t//allow selection of step by data-name\\n\\t\\t\\t\\tstep = Number(this.$element.find('.steps li[data-name=\\\"' + step + '\\\"]').first().attr('data-step')) || Number(step);\\n\\n\\t\\t\\t\\tif (1 <= step && step <= this.numSteps) {\\n\\t\\t\\t\\t\\tthis.currentStep = step;\\n\\t\\t\\t\\t\\tthis.setState();\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tstep = this.$element.find('.steps li.active:first').attr('data-step');\\n\\t\\t\\t\\t\\tif (!isNaN(step)) {\\n\\t\\t\\t\\t\\t\\tthis.currentStep = parseInt(step, 10);\\n\\t\\t\\t\\t\\t\\tthis.setState();\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tretVal = this;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tretVal = {\\n\\t\\t\\t\\t\\tstep: this.currentStep\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tif (this.$element.find('.steps li.active:first[data-name]').length) {\\n\\t\\t\\t\\t\\tretVal.stepname = this.$element.find('.steps li.active:first').attr('data-name');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn retVal;\\n\\t\\t}\\n\\t};\\n\\n\\n\\t// WIZARD PLUGIN DEFINITION\\n\\n\\t$.fn.wizard = function (option) {\\n\\t\\tvar args = Array.prototype.slice.call(arguments, 1);\\n\\t\\tvar methodReturn;\\n\\n\\t\\tvar $set = this.each(function () {\\n\\t\\t\\tvar $this = $(this);\\n\\t\\t\\tvar data = $this.data('fu.wizard');\\n\\t\\t\\tvar options = typeof option === 'object' && option;\\n\\n\\t\\t\\tif (!data) {\\n\\t\\t\\t\\t$this.data('fu.wizard', (data = new Wizard(this, options)));\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (typeof option === 'string') {\\n\\t\\t\\t\\tmethodReturn = data[option].apply(data, args);\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn (methodReturn === undefined) ? $set : methodReturn;\\n\\t};\\n\\n\\t$.fn.wizard.defaults = {\\n\\t\\tdisablePreviousStep: false,\\n\\t\\tselectedItem: {\\n\\t\\t\\tstep: -1\\n\\t\\t}//-1 means it will attempt to look for \\\"active\\\" class in order to set the step\\n\\t};\\n\\n\\t$.fn.wizard.Constructor = Wizard;\\n\\n\\t$.fn.wizard.noConflict = function () {\\n\\t\\t$.fn.wizard = old;\\n\\t\\treturn this;\\n\\t};\\n\\n\\n\\t// DATA-API\\n\\n\\t$(document).on('mouseover.fu.wizard.data-api', '[data-initialize=wizard]', function (e) {\\n\\t\\tvar $control = $(e.target).closest('.wizard');\\n\\t\\tif (!$control.data('fu.wizard')) {\\n\\t\\t\\t$control.wizard($control.data());\\n\\t\\t}\\n\\t});\\n\\n\\t// Must be domReady for AMD compatibility\\n\\t$(function () {\\n\\t\\t$('[data-initialize=wizard]').each(function () {\\n\\t\\t\\tvar $this = $(this);\\n\\t\\t\\tif ($this.data('fu.wizard')) return;\\n\\t\\t\\t$this.wizard($this.data());\\n\\t\\t});\\n\\t});\\n\\n\\t// -- BEGIN UMD WRAPPER AFTERWORD --\\n}));\\n// -- END UMD WRAPPER AFTERWORD --\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// H:/Ironkey/EMS/ironkey/~/raw-loader!H:/Ironkey/EMS/ironkey/~/fuelux/js/wizard.js\n// module id = 1639\n// module chunks = 14"],"sourceRoot":""}